# Enclava Environment Configuration
# Copy this file to .env and customize for your deployment
# For production: Use strong passwords and secrets!

# ====================================
# CORE CONFIGURATION (Required)
# ====================================

# Database Configuration
POSTGRES_DB=enclava_db
POSTGRES_USER=enclava_user
# Development: Use simple password for local testing
# Production: Use strong password (min 16 chars, mixed case, numbers, symbols)
POSTGRES_PASSWORD=enclava_pass

# Security Configuration
# Development: Can use default value for local testing
# Production: Generate with: openssl rand -hex 32
JWT_SECRET=your-jwt-secret-here-change-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=1440

# Admin Credentials
# Production: Use real email and strong password
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=changeme123!

# Application URL
# Development: http://localhost
# Production: https://your-domain.com
BASE_URL=http://localhost
NEXT_PUBLIC_BASE_URL=http://localhost

# ====================================
# REDIS CONFIGURATION
# ====================================

# Optional: Redis password (recommended for production)
# REDIS_PASSWORD=
REDIS_MAX_MEMORY=256mb

# ====================================
# NETWORK & CORS
# ====================================

# Development: Include localhost origins
# Production: Only include your actual domains
CORS_ORIGINS=http://localhost,http://localhost:3000,http://localhost:3002

# Port Configuration (for Docker Compose)
BACKEND_INTERNAL_PORT=8000
FRONTEND_INTERNAL_PORT=3000
NGINX_PORT=80
NGINX_SSL_PORT=443

# ====================================
# PERFORMANCE & SCALING
# ====================================

# Backend Workers (adjust based on CPU cores)
BACKEND_WORKERS=4
MAX_CONNECTIONS=100

# Node.js Memory (in MB)
NODE_OPTIONS=--max-old-space-size=1024

# ====================================
# LOGGING & DEBUGGING
# ====================================

LOG_LEVEL=INFO
# Set to true to log LLM prompts (not recommended for production)
LOG_LLM_PROMPTS=false

# ====================================
# STORAGE PATHS
# ====================================

# For Docker Compose deployments
# Development: Use relative paths (./data, ./logs)
# Production: Use absolute paths (/var/lib/enclava/data)
DATA_PATH=./data
LOG_PATH=./logs
UPLOAD_PATH=./uploads
PLUGIN_PATH=./plugins

# ====================================
# QDRANT VECTOR DATABASE
# ====================================

QDRANT_LOG_LEVEL=INFO
QDRANT_ON_DISK=true
QDRANT_MAX_REQUEST_SIZE=32
QDRANT_INDEX_THRESHOLD=20000

# ====================================
# AI SERVICE INTEGRATIONS (Optional)
# ====================================

# OpenAI API
# OPENAI_API_KEY=sk-...

# Anthropic Claude API
# ANTHROPIC_API_KEY=sk-ant-...

# Azure OpenAI
# AZURE_OPENAI_API_KEY=
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_DEPLOYMENT=gpt-4

# Google AI (Gemini)
# GOOGLE_API_KEY=

# Privatemode.ai (for confidential AI processing)
# PRIVATEMODE_API_KEY=
# PRIVATEMODE_CACHE_MODE=memory
# PRIVATEMODE_CACHE_SALT=
# PRIVATEMODE_LOG_LEVEL=INFO

# ====================================
# DEPLOYMENT CONFIGURATION
# ====================================

# Deployment type (docker-compose, kubernetes, kubernetes-helm)
DEPLOYMENT_TYPE=docker-compose

# Container Registry (for Kubernetes deployments)
# Options: ghcr.io, docker.io, gcr.io, ecr, acr
CONTAINER_REGISTRY=ghcr.io
CONTAINER_REGISTRY_ORG=enclava-ai

# Image tags
# Development: latest
# Production: Use specific version tags (v1.0.0)
IMAGE_TAG=latest

# ====================================
# BACKUP CONFIGURATION (Optional)
# ====================================

# Enable automated backups
# BACKUP_ENABLED=false
# BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30

# S3-compatible storage for backups
# BACKUP_S3_BUCKET=
# BACKUP_S3_ENDPOINT=https://s3.amazonaws.com
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=us-east-1

# ====================================
# MONITORING (Optional)
# ====================================

# Prometheus metrics
# METRICS_ENABLED=false
# METRICS_PORT=9090

# Sentry error tracking
# SENTRY_DSN=
# SENTRY_ENVIRONMENT=production

# ====================================
# FEATURE FLAGS (Optional)
# ====================================

# Enable/disable specific features
# ENABLE_SIGNUP=true
# ENABLE_SOCIAL_AUTH=false
# ENABLE_API_DOCS=true
# ENABLE_ADMIN_PANEL=true

# ====================================
# NOTES FOR PRODUCTION DEPLOYMENT
# ====================================

# SECURITY CHECKLIST:
# [ ] Generate strong JWT_SECRET (32+ characters)
# [ ] Set strong POSTGRES_PASSWORD (16+ characters)
# [ ] Set strong ADMIN_PASSWORD
# [ ] Update BASE_URL to your actual domain
# [ ] Configure CORS_ORIGINS for your domains only
# [ ] Enable REDIS_PASSWORD
# [ ] Use absolute paths for storage
# [ ] Set appropriate resource limits

# KUBERNETES DEPLOYMENT:
# - This .env file can be used with ConfigMaps and Secrets
# - Sensitive values should go in Secrets, non-sensitive in ConfigMaps
# - Update CONTAINER_REGISTRY_ORG if using your own registry
# - Set IMAGE_TAG to specific version for production

# DOCKER COMPOSE DEPLOYMENT:
# - Copy to .env for development
# - Copy to .env.prod and update all values for production
# - Use deploy-prod.sh script for managed deployment